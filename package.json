{
	"name": "logmagic",
	"displayName": "LogMagic",
	"description": "Easily print variables and parameters with keyboard shortcuts for quick debugging.",
	"version": "1.7.0",
	"repository": "https://github.com/syko/VSCodeLogMagic",
	"publisher": "syko",
	"license": "See LICENSE",
	"icon": "images/logo.png",
	"engines": {
		"vscode": "^1.49.3"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"logging",
		"print",
		"console",
		"debug",
		"code generation"
	],
	"activationEvents": [
		"onCommand:logmagic.logDown",
		"onCommand:logmagic.logUp",
		"onCommand:logmagic.removeAllLogStatements"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "logmagic.logDown",
				"title": "LogMagic: Log Downwards"
			},
			{
				"command": "logmagic.logUp",
				"title": "LogMagic: Log Upwards"
			},
			{
				"command": "logmagic.removeAllLogStatements",
				"title": "LogMagic: Remove All Log Statements From Current File"
			}
		],
		"configuration": {
			"title": "LogMagic",
			"properties": {
				"logMagic.defaultLanguage": {
					"type": "string",
					"scope": "resource",
					"description": "The default language to use when the active language is not directly supported by LogMagic.",
					"enum": [
						"javascript",
						"C#"
					],
					"default": "javascript"
				},
				"logMagic.logFormats": {
					"type": "array",
					"scope": "resource",
					"description": "Configure one or more log statements to generate & rotate between.\n Can be configured on any setting level, including folders.\n Each statement specification is an object like\n{\n\"logPrefix\": \"A log-function call including the opening parenthesesis print(\",\n\t\"parameterSeparator\": \"A parameter separator, like a comma\",\n\t\"identifierPrefix\": \"Anything to prefix identifiers with\",\n\t\"identifierSuffix\": \"Anything to suffix identifiers with, like .toString()\",\n\t\"logSuffix\": \"An ending suffix to complete the log statement, like );\",\n\t\"quoteCharacter\": \"The quote character to use when logging strings\",\n\t\"insertSpaces\": \"A boolean indicating whether logged strings should be wrapped in spaces for padding.\"\n}"
				}
			}
		},
		"keybindings": [
			{
				"command": "logmagic.logDown",
				"key": "alt+j",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"command": "logmagic.logUp",
				"key": "alt+k",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"command": "logmagic.removeAllLogStatements",
				"key": "ctrl+alt+j",
				"mac": "cmd+alt+j",
				"when": "editorTextFocus && !editorReadonly"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "yarn run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "yarn run test-compile",
		"lint": "eslint src --ext ts",
		"test": "mocha --recursive ./out/test/*.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.2",
		"@types/node": "14.x",
		"@types/vscode": "^1.49.0",
		"@typescript-eslint/eslint-plugin": "^5.6.0",
		"@typescript-eslint/parser": "^5.6.0",
		"eslint": "^8.4.1",
		"eslint-config-airbnb-base": "^15.0.0",
		"eslint-plugin-import": "^2.25.3",
		"glob": "^7.1.7",
		"mocha": "^8.4.0",
		"ts-loader": "^9.2.2",
		"typescript": "^4.3.2",
		"webpack": "^5.38.1",
		"webpack-cli": "^4.7.0"
	}
}
